name: Modify Waydroid
on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      arch:
        description: "Build arch"
        required: true
        default: "x64"
        type: choice
        options:
        - x64
      and_ver:
        description: "Android Version"
        required: true
        default: "11"
        type: choice
        options:
        - 11
      magisk_apk:
        description: "Magisk version"
        required: true
        default: "24.3"
        type: choice
        options:
        - 24.1
        - 24.2
        - 24.3
        - stable
        - beta
        - canary
      gapps_variant:
        description: "Variants of gapps"
        required: true
        default: "none"
        type: choice
        options:
        - none
        - super
        - stock
        - full
        - mini
        - micro
        - nano
        - pico
        - tvstock
        - tvmini
      root_sol:
        description: "Root solution"
        required: true
        default: "magisk"
        type: choice
        options:
        - magisk
        - none

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate build matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            let matrix = {};
            let arch = "${{ github.event.inputs.arch }}"
            switch ( arch ) {
              case "x64":
                matrix.arch = ["x64"];
                break;
              case "arm64":
                matrix.arch = ["arm64"];
                break;
              default:
                matrix.arch = ["x64"];
                break;
            }
            let magisk_apk = "${{ github.event.inputs.magisk_apk }}"
            switch ( magisk_apk ) {
              default:
                matrix.magisk_apk = ["24.3"];
                break;
            }
            let gapps_variant = "${{ github.event.inputs.gapps_variant }}"
            switch ( gapps_variant ) {
              default:
                matrix.gapps_variant = ["none"];
                break;
            }
            let root_sol = "${{ github.event.inputs.root_sol }}"
            switch ( root_sol ) {
              default:
                matrix.root_sol = ["magisk"];
                break;
            }
            core.setOutput("matrix",JSON.stringify(matrix));

  build:
    runs-on: ubuntu-20.04
    needs: matrix
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Dependencies
        run: |
          pip3 install beautifulsoup4 lxml
          sudo apt-get update && sudo apt-get install setools lzip qemu-utils patchelf
      - name: Download Magisk
        shell: python
        run: |
          import urllib.request
          import zipfile
          import os
          import json
          import requests

          magisk_apk = """${{ github.event.inputs.magisk_apk }}"""
          
          if not magisk_apk:
              magisk_apk = "24.1"
          if magisk_apk == "24.1":
              magisk_apk = "https://github.com/topjohnwu/Magisk/releases/download/v24.1/Magisk-v24.1.apk"
          if magisk_apk == "24.2":
              magisk_apk = "https://github.com/topjohnwu/Magisk/releases/download/v24.2/Magisk-v24.2.apk"
          if magisk_apk == "24.3":
              magisk_apk = "https://github.com/topjohnwu/Magisk/releases/download/v24.3/Magisk-v24.3.apk"
          if magisk_apk == "stable" or magisk_apk == "beta" or magisk_apk == "canary":
              magisk_apk = json.loads(requests.get(f"https://github.com/topjohnwu/magisk-files/raw/master/{magisk_apk}.json").content)['magisk']['link']
          

          out_file = "magisk.zip"

          arch = "${{ matrix.arch }}"

          abi_map={"x64" : ["x86_64", "x86"], "arm64" : ["arm64-v8a", "armeabi-v7a"]}

          if not os.path.isfile(out_file):
              urllib.request.urlretrieve(magisk_apk, out_file)

          def extract_as(zip, name, as_name, dir):
              info = zip.getinfo(name)
              info.filename = as_name
              zip.extract(info, dir)
              
          # changes to standalone_policy since v24.3
          # extract_as(zip, f"lib/{ abi_map[arch][0] }/libmagiskinit.so", "magiskpolicy", "magisk")
          # extract_as(zip, f"lib/{ abi_map['x64'][0] }/libmagiskinit.so", "magiskpolicy", ".")
              
          with zipfile.ZipFile(out_file) as zip:
              extract_as(zip, f"lib/{ abi_map[arch][0] }/libmagisk64.so", "magisk64", "magisk")
              extract_as(zip, f"lib/{ abi_map[arch][1] }/libmagisk32.so", "magisk32", "magisk")
              standalone_policy = False
              try:
                zip.getinfo(f"lib/{ abi_map[arch][0] }/libmagiskpolicy.so")
                standalone_policy = True
              except:
                pass
              extract_as(zip, f"lib/{ abi_map[arch][0] }/libmagiskinit.so", "magiskinit", "magisk")
              if standalone_policy:
                extract_as(zip, f"lib/{ abi_map[arch][0] }/libmagiskpolicy.so", "magiskpolicy", "magisk")
              else:
                extract_as(zip, f"lib/{ abi_map[arch][0] }/libmagiskinit.so", "magiskpolicy", "magisk")
              extract_as(zip, f"lib/{ abi_map[arch][0] }/libmagiskboot.so", "magiskboot", "magisk")
              extract_as(zip, f"lib/{ abi_map[arch][0] }/libbusybox.so", "busybox", "magisk")
              if standalone_policy:
                extract_as(zip, f"lib/{ abi_map['x64'][0] }/libmagiskpolicy.so", "magiskpolicy", ".")
              else:
                extract_as(zip, f"lib/{ abi_map['x64'][0] }/libmagiskinit.so", "magiskpolicy", ".")
              extract_as(zip, f"assets/boot_patch.sh", "boot_patch.sh", "magisk")
              extract_as(zip, f"assets/util_functions.sh", "util_functions.sh", "magisk")
      - name: Download OpenGApps
        if: ${{ matrix.gapps_variant != 'none' && matrix.gapps_variant != '' }}
        shell: python
        run: |
          import requests
          import zipfile
          import os
          import urllib.request
          import json
          import re

          arch = "${{ matrix.arch }}"
          variant = "${{ matrix.gapps_variant }}"
          abi_map = {"x64" : "x86_64", "arm64": "arm64"}
          try:
              res = requests.get(f"https://api.opengapps.org/list")
              j = json.loads(res.content)
              link = {i["name"]: i for i in j["archs"][abi_map[arch]]["apis"]["11.0"]["variants"]}[variant]["zip"]
          except Exception:
              print("Failed to fetch from opengapps api, fallbacking to sourceforge rss...")
              res = requests.get(f'https://sourceforge.net/projects/opengapps/rss?path=/{abi_map[arch]}&limit=100')
              link = re.search(f'https://.*{abi_map[arch]}/.*{variant}.*\.zip/download', res.text).group().replace('.zip/download', '.zip').replace('sourceforge.net/projects/opengapps/files', 'downloads.sourceforge.net/project/opengapps')

          print(f"downloading link: {link}", flush=True)

          out_file = "gapps.zip"

          if not os.path.isfile(out_file):
              urllib.request.urlretrieve(link, out_file)
          print("done", flush=True)
      - name: Download system and vendor
        run: |
          wget -q https://sourceforge.net/projects/waydroid/files/images/system/lineage/waydroid_x86_64/lineage-18.1-20221109-GAPPS-waydroid_x86_64-system.zip/download -O system.zip
          wget -q https://sourceforge.net/projects/waydroid/files/images/vendor/waydroid_x86_64/lineage-18.1-20221109-MAINLINE-waydroid_x86_64-vendor.zip/download -O vendor.zip
          7z x system.zip -o${{ matrix.arch }}/
          7z x vendor.zip -o${{ matrix.arch }}/
      - name: Extract GApps
        if: ${{ matrix.gapps_variant != 'none' && matrix.gapps_variant != '' }}
        run: |
          mkdir gapps
          unzip -p gapps.zip {Core,GApps}/'*.lz' | tar --lzip -C gapps -xvf - -i --strip-components=2 --exclude='setupwizardtablet-x86_64' --exclude='packageinstallergoogle-all' --exclude='speech-common' --exclude='markup-lib-arm' --exclude='markup-lib-arm64' --exclude='markup-all' --exclude='setupwizarddefault-x86_64' --exclude='pixellauncher-all' --exclude='pixellauncher-common'
      - name: Expand system
        run: |
          e2fsck -yf ${{ matrix.arch }}/system.img
          resize2fs ${{ matrix.arch }}/system.img $(( 409600 + $(du -sB512 ${{ matrix.arch }}/system.img | cut -f1) ))s
      - name: Expand vendor
        run: |
          e2fsck -yf ${{ matrix.arch }}/vendor.img
          resize2fs ${{ matrix.arch }}/vendor.img 512M
      - name: Mount images
        run: |
          sudo mkdir system
          sudo mkdir userdata
          sudo mount -o loop ${{ matrix.arch }}/system.img system
          sudo mount -o loop ${{ matrix.arch }}/vendor.img system/vendor
      - name: Integrate Magisk
        if: ${{ github.event.inputs.root_sol == 'magisk' || github.event.inputs.root_sol == '' }}
        run: |
          sudo mkdir system/sbin
          sudo chcon --reference system/init.environ.rc system/sbin
          sudo chown root:root system/sbin
          sudo chmod 0700 system/sbin
          sudo cp magisk/* system/sbin/
          sudo tee -a system/sbin/loadpolicy.sh <<EOF
          #!/system/bin/sh
          restorecon -R /data/adb/magisk
          for module in \$(ls /data/adb/modules); do
              if ! [ -f "/data/adb/modules/\$module/disable" ] && [ -f "/data/adb/modules/\$module/sepolicy.rule" ]; then
                  /sbin/magiskpolicy --live --apply "/data/adb/modules/\$module/sepolicy.rule"
              fi
          done
          EOF
          sudo find system/sbin -type f -exec chmod 0755 {} \;
          sudo find system/sbin -type f -exec chown root:root {} \;
          sudo find system/sbin -type f -exec chcon --reference system/product {} \;
          # new since v24.3
          sudo patchelf --replace-needed libc.so "${HOME}/libc.so" ./magiskpolicy || true
          sudo patchelf --replace-needed libm.so "${HOME}/libm.so" ./magiskpolicy || true
          sudo patchelf --replace-needed libdl.so "${HOME}/libdl.so" ./magiskpolicy || true
          sudo patchelf --set-interpreter "${HOME}/linker64" ./magiskpolicy || true
          # new since v24.3
          chmod +x ./magiskpolicy
          echo '/dev/magisk(/.*)?    u:object_r:magisk_file:s0' | sudo tee -a system/vendor/etc/selinux/vendor_file_contexts
          echo '/data/adb/magisk(/.*)?   u:object_r:magisk_file:s0' | sudo tee -a system/vendor/etc/selinux/vendor_file_contexts
          echo '/system/bin/strace u:object_r:zygote_socket:s0' | sudo tee -a system/vendor/etc/selinux/vendor_file_contexts
          sudo ./magiskpolicy --load system/vendor/etc/selinux/precompiled_sepolicy --save system/vendor/etc/selinux/precompiled_sepolicy --magisk "allow * magisk_file lnk_file *"
          sudo tee -a system/system/etc/init/hw/init.rc <<EOF

          on post-fs-data
              start logd
              start adbd
              mkdir /dev/magisk
              mount tmpfs tmpfs /dev/magisk mode=0755
              copy /sbin/magisk64 /dev/magisk/magisk64
              chmod 0755 /dev/magisk/magisk64
              symlink ./magisk64 /dev/magisk/magisk
              symlink ./magisk64 /dev/magisk/su
              symlink ./magisk64 /dev/magisk/resetprop
              copy /sbin/magisk32 /dev/magisk/magisk32
              chmod 0755 /dev/magisk/magisk32
              copy /sbin/magiskinit /dev/magisk/magiskinit
              chmod 0755 /dev/magisk/magiskinit
              
              # 24107
              copy /sbin/magiskpolicy /dev/magisk/magiskpolicy	
              chmod 0755 /dev/magisk/magiskpolicy
              copy /sbin/magisk.apk /dev/magisk/stub.apk
              #symlink ./magiskinit /dev/magisk/magiskpolicy # Fix for magisk 24.3-24107 - due to absence of magiskpolicy applet
              
              mkdir /dev/magisk/.magisk 700
              mkdir /dev/magisk/.magisk/mirror 700
              mkdir /dev/magisk/.magisk/block 700
              rm /dev/.magisk_unblock
              start IhhslLhHYfse
              start FAhW7H9G5sf
              # fix for magisk modules to load properly
              umount /dev/magisk/.magisk/mirror/data
              rm /dev/magisk/.magisk/mirror/data
              symlink /data /dev/magisk/.magisk/mirror/data
              wait /dev/.magisk_unblock 40
              rm /dev/.magisk_unblock
              # fix for Termux to work
              mount devpts devpts /dev/pts noexec nosuid gid=5 mode=620
              mknod /dev/tty c 5 0
              chmod 0666 /dev/tty

          service IhhslLhHYfse /system/bin/sh /sbin/loadpolicy.sh
              user root
              seclabel u:r:magisk:s0
              oneshot

          service FAhW7H9G5sf /dev/magisk/magisk --post-fs-data
              user root
              seclabel u:r:magisk:s0
              oneshot

          service HLiFsR1HtIXVN6 /dev/magisk/magisk --service
              class late_start
              user root
              seclabel u:r:magisk:s0
              oneshot

          on property:sys.boot_completed=1
              start YqCTLTppv3ML

          service YqCTLTppv3ML /dev/magisk/magisk --boot-complete
              user root
              seclabel u:r:magisk:s0
              oneshot
          EOF
      - name: Remove FOSS Apps
        run: |
          sudo rm -rf system/system/app/com.google.android.gsf
          sudo rm -rf system/system/app/com.aurora.adroid
          sudo rm -rf system/system/app/com.aurora.store
          sudo rm -rf system/system/app/com.etesync.syncadapter
          sudo rm -rf system/system/app/is.xyz.mpv
          sudo rm -rf system/system/app/me.jfenn.alarmio
          sudo rm -rf system/system/app/org.microg.gms.droidguard
          sudo rm -rf system/system/app/org.microg.nlp.backend.ichnaea
          sudo rm -rf system/system/app/org.microg.nlp.backend.nominatim
          sudo rm -rf system/system/app/org.schabi.newpipe
          sudo rm -rf system/system/app/ws.xsoh.etar
          sudo rm -rf system/system/priv-app/AuroraServices_v1.1.1
          sudo rm -rf system/system/priv-app/com.google.android.gms
          sudo rm -rf system/system/priv-app/com.android.vending
          sudo rm -rf system/system/product/app/Etar
          sudo rm -rf system/system/product/priv-app/Contacts
          sudo rm -rf system/system/product/app/ExactCalculator
          sudo rm -rf system/system/product/priv-app/Eleven
          sudo rm -rf system/system/app/com.simplemobiletools.gallery.pro
          sudo rm -rf system/system/app/NotePad
          sudo rm -rf system/system/app/org.bromite.bromite
          sudo rm -rf system/system/app/com.google.android.webview
          sudo rm -rf system/system/app/com.android.webview
          sudo mv system/system/xbin/su system/system/xbin/suold
          sudo ls system/system/xbin
          wget -qO- "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/archive/$GITHUB_REF.tar.gz" | sudo tar --wildcards -zxvf- --strip-component=2 '*/${{ matrix.arch }}/system/*'
          sudo find system/system/priv-app -type d -exec chmod 0755 {} \;
          sudo find system/system/priv-app -type f -exec chmod 0644 {} \;
          sudo find system/system/priv-app -exec chcon --reference=system/system/priv-app {} \;
      - name: Integrate GApps
        if: ${{ matrix.gapps_variant != 'none' && matrix.gapps_variant != '' }}
        run: |
          wget -qO- "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/archive/$GITHUB_REF.tar.gz" | sudo tar --wildcards -zxvf- --strip-component=2 '*/${{ matrix.arch }}/gapps/*'
          shopt -s extglob
          sudo cp -vr gapps/!(product) system/system
          sudo cp -vr gapps/product/* system/product/

          sudo find system/system/{app,etc,framework,priv-app} -exec chown root:root {} \;
          sudo find system/product/{app,etc,overlay,priv-app} -exec chown root:root {} \;

          sudo find system/system/{app,etc,framework,priv-app} -type d -exec chmod 0755 {} \;
          sudo find system/product/{app,etc,overlay,priv-app} -type d -exec chmod 0755 {} \;

          sudo find system/system/{app,framework,priv-app} -type f -exec chmod 0644 {} \;
          ls gapps/etc/ | xargs -n 1 -I dir sudo find system/system/etc/dir -type f -exec chmod 0644 {} \;
          sudo find system/product/{app,etc,overlay,priv-app} -type f -exec chmod 0644 {} \;

          sudo find system/system/{app,framework,priv-app} -type d -exec chcon --reference=system/system/app {} \;
          sudo find system/product/{app,etc,overlay,priv-app} -type d -exec chcon --reference=system/product/app {} \;
          ls gapps/etc/ | xargs -n 1 -I dir sudo find system/system/etc/dir -type d -exec chcon --reference=system/system/etc/permissions {} \;

          sudo find system/system/{app,framework,priv-app} -type f -exec chcon --reference=system/system/framework/ext.jar {} \;
          ls gapps/etc/ | xargs -n 1 -I dir sudo find system/system/etc/dir -type f -exec chcon --reference=system/system/etc/permissions {} \;
          sudo find system/product/{app,etc,overlay,priv-app} -type f -exec chcon --reference=system/product/etc/permissions/privapp-permissions-venezia.xml {} \;
          
          # new since Magisk beta 24007
          sudo patchelf --replace-needed libc.so "${HOME}/libc.so" ./magiskpolicy || true	
          sudo patchelf --replace-needed libm.so "${HOME}/libm.so" ./magiskpolicy || true	
          sudo patchelf --replace-needed libdl.so "${HOME}/libdl.so" ./magiskpolicy || true	
          sudo patchelf --set-interpreter "${HOME}/linker64" ./magiskpolicy || true
          
          chmod +x ./magiskpolicy
          sudo ./magiskpolicy --load system/vendor/etc/selinux/precompiled_sepolicy --save system/vendor/etc/selinux/precompiled_sepolicy "allow gmscore_app gmscore_app vsock_socket { create connect write read }" "allow gmscore_app device_config_runtime_native_boot_prop file read" "allow gmscore_app system_server_tmpfs dir search" "allow gmscore_app system_server_tmpfs file open"
      - name: Fix GApps prop
        if: ${{ matrix.gapps_variant != 'none' && matrix.gapps_variant != '' }}
        shell: sudo python {0}
        run: |
          from __future__ import annotations
          from io import TextIOWrapper
          from os import system
          from typing import OrderedDict


          class Prop(OrderedDict):
              def __init__(self, file: TextIOWrapper) -> None:
                  super().__init__()
                  for i, line in enumerate(file.read().splitlines(False)):
                      if '=' in line:
                          k, v = line.split('=', 2)
                          self[k] = v
                      else:
                          self[f".{i}"] = line

              def __str__(self) -> str:
                  return '\n'.join([v if k.startswith('.') else f"{k}={v}" for k, v in self.items()])

              def __iadd__(self, other: str) -> Prop:
                  self[f".{len(self)}"] = other
                  return self


          new_props = {
              ("product", "brand"): "google",
              ("product", "manufacturer"): "Google",
              ("build", "product"): "redfin",
              ("product", "name"): "redfin",
              ("product", "device"): "redfin",
              ("product", "model"): "Pixel 5",
              ("build", "flavor"): "redfin-user"
          }


          def description(sec: str, p: Prop) -> str:
              return f"{p[f'ro.{sec}.build.flavor']} {p[f'ro.{sec}.build.version.release_or_codename']} {p[f'ro.{sec}.build.id']} {p[f'ro.{sec}.build.version.incremental']} {p[f'ro.{sec}.build.tags']}"


          def fingerprint(sec: str, p: Prop) -> str:
              return f"""{p[f"ro.product.{sec}.brand"]}/{p[f"ro.product.{sec}.name"]}/{p[f"ro.product.{sec}.device"]}:{p[f"ro.{sec}.build.version.release"]}/{p[f"ro.{sec}.build.id"]}/{p[f"ro.{sec}.build.version.incremental"]}:{p[f"ro.{sec}.build.type"]}/{p[f"ro.{sec}.build.tags"]}"""


          def fix_prop(sec, prop):
              print(f"fixing {prop}", flush=True)
              with open(prop, 'r') as f:
                  p = Prop(f)

              p += "# extra prop added by MagiskOnWSA"

              for k, v in new_props.items():
                  p[f"ro.{k[0]}.{k[1]}"] = v
                  
                  if k[0] == "build":
                      p[f"ro.{sec}.{k[0]}.{k[1]}"] = v
                  elif k[0] == "product":
                      p[f"ro.{k[0]}.{sec}.{k[1]}"] = v

              p["ro.build.description"] = description(sec, p)
              p[f"ro.build.fingerprint"] = fingerprint(sec, p)
              p[f"ro.{sec}.build.description"] = description(sec, p)
              p[f"ro.{sec}.build.fingerprint"] = fingerprint(sec, p)
              p[f"ro.bootimage.build.fingerprint"] = fingerprint(sec, p)

              with open(prop, 'w') as f:
                  f.write(str(p))

          for sec, prop in {"system": "system/system/build.prop", "product": "system/product/build.prop", "system_ext": "system/system_ext/build.prop", "vendor": "system/vendor/build.prop", "odm": "system/vendor/odm/etc/build.prop"}.items():
              fix_prop(sec, prop)
      - name: Umount images
        run: |
          sudo umount system/vendor
          sudo umount system
      - name: Shrink images
        run: |
          e2fsck -yf ${{ matrix.arch }}/system.img
          resize2fs -M ${{ matrix.arch }}/system.img
          e2fsck -yf ${{ matrix.arch }}/vendor.img
          resize2fs -M ${{ matrix.arch }}/vendor.img
      - name: Remove signature and add scripts
        run: |
          rm -rf ${{ matrix.arch }}/system_ext.img
          shopt -s extglob
          sudo rm -rf -- ${{ matrix.arch }}/!(system.img|vendor.img)
      - name: Generate artifact name
        run: |
          variant="${{ matrix.gapps_variant }}"
          root="${{ github.event.inputs.root_sol }}"
          if [[ "$root" = "none" ]]; then
            name1=""
          elif [[ "$root" = "" ]]; then
            name1="-magisk"
          else
            name1="-${root}"
          fi
          if [[ "$variant" = "none" || "$variant" = "" ]]; then
            name2="-VANILLA"
          else
            name2="-${variant}"
          fi
          echo "artifact_name=Waydroid${name1}${name2}_${{ matrix.arch }}" >> $GITHUB_ENV
      - name: Upload Waydroid
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifact_name }}
          path: "./${{ matrix.arch }}/*"
